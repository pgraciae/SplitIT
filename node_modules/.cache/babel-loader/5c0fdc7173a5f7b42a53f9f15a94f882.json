{"ast":null,"code":"var _jsxFileName = \"/home/user/SplitIT/src/Components/Table.js\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(quantity, productName, productPrice) {\n  return {\n    quantity,\n    productName,\n    productPrice\n  };\n} // QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \n\n\nconst rows = [createData(159, 'Frozen yoghurt', 6.0), createData(159, 'Ice cream sandwich', 237), createData(159, 'Eclair', 262), createData(159, 'Cupcake', 305), createData(159, 'Gingerbread', 356)];\nexport default function BasicTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quantity \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Product Prize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.productPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, row.productName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/user/SplitIT/src/Components/Table.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","quantity","productName","productPrice","rows","BasicTable","minWidth","map","row","border"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6BC,WAA7B,EAA0CC,YAA1C,EAAyD;AACrD,SAAO;AAAEF,IAAAA,QAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,GAAP;AACD,C,CAEH;;;AACA,MAAMC,IAAI,GAAG,CACTJ,UAAU,CAAE,GAAF,EAAM,gBAAN,EAAwB,GAAxB,CADD,EAETA,UAAU,CAAE,GAAF,EAAM,oBAAN,EAA4B,GAA5B,CAFD,EAGTA,UAAU,CAAE,GAAF,EAAM,QAAN,EAAgB,GAAhB,CAHD,EAITA,UAAU,CAAE,GAAF,EAAM,SAAN,EAAiB,GAAjB,CAJD,EAKTA,UAAU,CAAE,GAAF,EAAO,aAAP,EAAsB,GAAtB,CALD,CAAb;AAQA,eAAe,SAASK,UAAT,GAAsB;AACjC,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEN,KAA3B;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAA8B,oBAAW,cAAzC;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAA,kBACGF,IAAI,CAACG,GAAL,CAAUC,GAAD,iBACR,QAAC,QAAD;AAEE,UAAA,EAAE,EAAE;AAAE,gDAAoC;AAAEC,cAAAA,MAAM,EAAE;AAAV;AAAtC,WAFN;AAAA,kCAKE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BD,GAAG,CAACP;AAA9B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BO,GAAG,CAACN;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BM,GAAG,CAACL;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WACOK,GAAG,CAACN,WADX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;KA5BqBG,U","sourcesContent":["import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction createData(quantity,productName, productPrice ) {\n    return { quantity,productName, productPrice };\n  }\n  \n// QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \nconst rows = [\n    createData( 159,'Frozen yoghurt', 6.0),\n    createData( 159,'Ice cream sandwich', 237),\n    createData( 159,'Eclair', 262),\n    createData( 159,'Cupcake', 305),\n    createData( 159, 'Gingerbread', 356)\n  ];\n\nexport default function BasicTable() {\n    return (\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Quantity </TableCell>\n              <TableCell align=\"right\">Product Name</TableCell>\n              <TableCell align=\"right\">Product Prize</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.productName}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n           \n                <TableCell align=\"right\">{row.quantity}</TableCell>\n                <TableCell align=\"right\">{row.productName}</TableCell>\n                <TableCell align=\"right\">{row.productPrice}</TableCell>\n                \n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }"]},"metadata":{},"sourceType":"module"}