{"ast":null,"code":"var _jsxFileName = \"/home/user/SplitIT/src/Components/Table.js\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createData(quantity, productName, productPrice) {\n  return {\n    quantity,\n    productName,\n    productPrice\n  };\n} // QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \n\n\nconst rows = [createData(159, 'Frozen yoghurt', 6.0), createData(159, 'Ice cream sandwich', 237), createData(159, 'Eclair', 262), createData(159, 'Cupcake', 305), createData(159, 'Gingerbread', 356)];\nexport default function BasicTable() {\n  /*return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Quantity </TableCell>\n            <TableCell align=\"right\">Product Name</TableCell>\n            <TableCell align=\"right\">Product Prize</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.productName}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n         \n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\">{row.productName}</TableCell>\n              <TableCell align=\"right\">{row.productPrice}</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );*/\n\n  /*#__PURE__*/\n  _jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"A barbone structure table example with a caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.selectTableCell,\n            children: row.isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"done\",\n                onClick: () => onToggleEditMode(row.id),\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"revert\",\n                onClick: () => onRevert(row.id),\n                children: /*#__PURE__*/_jsxDEV(RevertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"delete\",\n              onClick: () => onToggleEditMode(row.id),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: \"name\",\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: \"calories\",\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: \"fat\",\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: \"carbs\",\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: \"protein\",\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/user/SplitIT/src/Components/Table.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","createData","quantity","productName","productPrice","rows","BasicTable","classes","root","table","map","row","selectTableCell","isEditMode","onToggleEditMode","id","onRevert","name","onChange"],"mappings":"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","sourcesContent":["import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction createData(quantity,productName, productPrice ) {\n    return { quantity,productName, productPrice };\n  }\n  \n// QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \nconst rows = [\n    createData( 159,'Frozen yoghurt', 6.0),\n    createData( 159,'Ice cream sandwich', 237),\n    createData( 159,'Eclair', 262),\n    createData( 159,'Cupcake', 305),\n    createData( 159, 'Gingerbread', 356)\n  ];\n\nexport default function BasicTable() {\n    /*return (\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Quantity </TableCell>\n              <TableCell align=\"right\">Product Name</TableCell>\n              <TableCell align=\"right\">Product Prize</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.productName}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n           \n                <TableCell align=\"right\">{row.quantity}</TableCell>\n                <TableCell align=\"right\">{row.productName}</TableCell>\n                <TableCell align=\"right\">{row.productPrice}</TableCell>\n                \n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );*/\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"caption table\">\n        <caption>A barbone structure table example with a caption</caption>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\" />\n            <TableCell align=\"left\">Dessert (100g serving)</TableCell>\n            <TableCell align=\"left\">Calories</TableCell>\n            <TableCell align=\"left\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"left\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"left\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell className={classes.selectTableCell}>\n                {row.isEditMode ? (\n                  <>\n                    <IconButton\n                      aria-label=\"done\"\n                      onClick={() => onToggleEditMode(row.id)}\n                    >\n                      <DoneIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"revert\"\n                      onClick={() => onRevert(row.id)}\n                    >\n                      <RevertIcon />\n                    </IconButton>\n                  </>\n                ) : (\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => onToggleEditMode(row.id)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n              <CustomTableCell {...{ row, name: \"name\", onChange }} />\n              <CustomTableCell {...{ row, name: \"calories\", onChange }} />\n              <CustomTableCell {...{ row, name: \"fat\", onChange }} />\n              <CustomTableCell {...{ row, name: \"carbs\", onChange }} />\n              <CustomTableCell {...{ row, name: \"protein\", onChange }} />\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  }"]},"metadata":{},"sourceType":"module"}