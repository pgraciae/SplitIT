{"ast":null,"code":"var _jsxFileName = \"/home/user/SplitIT/src/Components/Table.js\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DataGrid from '@mui/material/DataGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(quantity, productName, productPrice) {\n  return {\n    quantity,\n    productName,\n    productPrice\n  };\n} // QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \n\n\nconst rows = [createData(159, 'Frozen yoghurt', 6.0), createData(159, 'Ice cream sandwich', 237), createData(159, 'Eclair', 262), createData(159, 'Cupcake', 305), createData(159, 'Gingerbread', 356)];\nexport default function BasicTable() {\n  /*return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Quantity </TableCell>\n            <TableCell align=\"right\">Product Name</TableCell>\n            <TableCell align=\"right\">Product Prize</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.productName}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n         \n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\">{row.productName}</TableCell>\n              <TableCell align=\"right\">{row.productPrice}</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );*/\n\n  /*#__PURE__*/\n  _jsxDEV(DataGrid, {\n    className: classes.root,\n    rows: rows //columns={columns}\n    ,\n    isCellEditable: x => true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/user/SplitIT/src/Components/Table.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DataGrid","createData","quantity","productName","productPrice","rows","BasicTable","classes","root","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA6BC,WAA7B,EAA0CC,YAA1C,EAAyD;AACrD,SAAO;AAAEF,IAAAA,QAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,GAAP;AACD,C,CAEH;;;AACA,MAAMC,IAAI,GAAG,CACTJ,UAAU,CAAE,GAAF,EAAM,gBAAN,EAAwB,GAAxB,CADD,EAETA,UAAU,CAAE,GAAF,EAAM,oBAAN,EAA4B,GAA5B,CAFD,EAGTA,UAAU,CAAE,GAAF,EAAM,QAAN,EAAgB,GAAhB,CAHD,EAITA,UAAU,CAAE,GAAF,EAAM,SAAN,EAAiB,GAAjB,CAJD,EAKTA,UAAU,CAAE,GAAF,EAAO,aAAP,EAAsB,GAAtB,CALD,CAAb;AAQA,eAAe,SAASK,UAAT,GAAsB;AACjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AAAA,UAAC,QAAD;AACF,IAAA,SAAS,EAAEC,OAAO,CAACC,IADjB;AAEF,IAAA,IAAI,EAAEH,IAFJ,CAGF;AAHE;AAIF,IAAA,cAAc,EAAGI,CAAD,IAAQ;AAJtB;AAAA;AAAA;AAAA;AAAA;AAMD;KAnCqBH,U","sourcesContent":["import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DataGrid from '@mui/material/DataGrid';\nfunction createData(quantity,productName, productPrice ) {\n    return { quantity,productName, productPrice };\n  }\n  \n// QUery a la base de dades quan es carregui la imatge , mentrestant es fa servir aixo \nconst rows = [\n    createData( 159,'Frozen yoghurt', 6.0),\n    createData( 159,'Ice cream sandwich', 237),\n    createData( 159,'Eclair', 262),\n    createData( 159,'Cupcake', 305),\n    createData( 159, 'Gingerbread', 356)\n  ];\n\nexport default function BasicTable() {\n    /*return (\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Quantity </TableCell>\n              <TableCell align=\"right\">Product Name</TableCell>\n              <TableCell align=\"right\">Product Prize</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.productName}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n           \n                <TableCell align=\"right\">{row.quantity}</TableCell>\n                <TableCell align=\"right\">{row.productName}</TableCell>\n                <TableCell align=\"right\">{row.productPrice}</TableCell>\n                \n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );*/\n\n    <DataGrid\n  className={classes.root}\n  rows={rows}\n  //columns={columns}\n  isCellEditable={(x ) => true}\n/>\n  }"]},"metadata":{},"sourceType":"module"}